package de.ferdinandhofherr.junit5classsource;

import de.ferdinandhofherr.junit5classsource.testsupport.PublicTestDataProvider;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;

import java.util.Arrays;
import java.util.stream.Stream;

import static de.ferdinandhofherr.junit5classsource.testsupport.AbstractTestDataProvider.TEST_DATA;
import static java.util.Arrays.asList;
import static org.junit.jupiter.api.Assertions.assertSame;
import static org.junit.jupiter.api.Assertions.assertTrue;

public class ClassSourceTest {

    @ParameterizedTest
    @ClassSource(PublicTestDataProvider.class)
    @DisplayName("Injects values generated by passed class")
    void injectsValuesGeneratedByPassedClass(Object value) {
        assertSame(TEST_DATA, value);
    }

    @ParameterizedTest
    @ClassSource(SampleDataProvider.class)
    void showClassSourceUsage(SampleData data) {
        assertTrue(asList("value1", "value2").contains(data.value));
    }

    private static class SampleDataProvider implements TestDataProvider<SampleData> {

        @Override
        public Stream<SampleData> provideTestData() {
            return Stream.of(
                    new SampleData("value1"),
                    new SampleData("value2"));
        }
    }

    private static class SampleData {
        String value;

        SampleData(String value) {
            this.value = value;
        }
    }
}
